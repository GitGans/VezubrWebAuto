{"name": "test_cargo_place_routing_lkz", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 'Грузоместа отправлены на маршрутизацию', but found 'Значение должно быть больше чем 6 авг. 2024 г., 23:27.'.", "trace": "domain = 'com'\n\n    @allure.story(\"Critical path test\")\n    @allure.feature('Маршрутизация грузомест')\n    @allure.description('ЛКЗ. Тест маршрутизации ГМ: создаем - ГМ, маршрутизируем - ТС 20т/90м3/ 33пал')\n    def test_cargo_place_routing_lkz(domain):\n        # Инициализация базовых объектов и авторизация под ролью 'lkz'\n        base, sidebar = base_test_with_login(domain=domain, role='lkz')\n    \n        # Переход к списку грузомест\n        sidebar.move_and_click(move_to=sidebar.assignments_hover, click_to=sidebar.cargo_place_list_button,\n                               do_assert=True, wait=\"lst\")\n        time.sleep(1.5)\n        cp_list = CargoPlaceList(base.driver)\n        # Клик по кнопке добавления грузоместа\n        cp_list.click_button(cp_list.add_cargo_place_button, wait=\"form\")\n    \n        add_cp = CargoPlaceAdd(base.driver)\n        # Выбор типа грузоместа \"Короб\"\n        add_cp.dropdown_click_input_click(add_cp.lkz_cp_type_select, \"Короб\")\n        # Ввод рандомизированных данных для количества, веса, объема и стоимости груза\n        add_cp.input_in_field(add_cp.cp_quantity_input, add_cp.random_value_float_str(1, 1))\n        add_cp.input_in_field(add_cp.cp_weight_input, add_cp.random_value_float_str(10, 20000))\n        add_cp.input_in_field(add_cp.cp_value_input, add_cp.random_value_float_str(0.1, 35.0))\n        add_cp.input_in_field(add_cp.cp_cost_input, add_cp.random_value_float_str(100, 1000000))\n        # Выбор статуса грузоместа \"Новое\"\n        add_cp.dropdown_click_input_click(add_cp.lkz_cp_status_select, \"Новое\")\n        # Генерация уникального идентификатора для грузоместа\n        cp_stamp = f\"ГМ-{add_cp.get_timestamp()}\"\n        # Ввод штрихкода грузоместа\n        add_cp.input_in_field(add_cp.lkz_bar_code_input, cp_stamp)\n        # Ввод адресов отправления и доставки\n        add_cp.dropdown_click_input_wait_enter(add_cp.departure_address_select, \"Екатеринбург\")\n        add_cp.dropdown_click_input_wait_enter(add_cp.delivery_address_select, \"Екатеринбург\")\n        # Клик по кнопке создания грузоместа\n        add_cp.click_button(add_cp.create_cargo_place_button, do_assert=True)\n        # Клик по кнопке подтверждения добавления\n        add_cp.click_button(add_cp.confirm_add_button, wait=\"lst\")\n    \n        cp_list = CargoPlaceList(base.driver)\n        # Сброс фильтров\n        cp_list.click_button(cp_list.reset_button, wait=\"lst\")\n        # Ввод штрихкода грузоместа в поле фильтрации\n        cp_list.input_in_field(cp_list.barcode_filter, value=cp_stamp, wait=\"lst\")\n        # Клик по кнопке экшен меню\n        cp_list.click_button(cp_list.action_menu_button)\n        # Клик по кнопке мультивыбор ГМ\n        cp_list.click_button(cp_list.multi_select_button)\n        # Выбор первого чек-бокса\n        cp_list.click_button(cp_list.cp_list_checkbox, index=3)\n        # Клик по кнопке маршрутизировать ГМ\n        cp_list.click_button(cp_list.multi_route_button)\n        # Выбор типа ТС для маршрутизации\n        cp_list.dropdown_click_input_click(cp_list.vehicle_type_select, dd_index=2, option_text=\"20т / 90м3 / 33пал.\")\n        # Ввод кол-ва ТС для маршрутизации\n        cp_list.input_in_field(cp_list.quantity_vehicle_input, \"1\")\n        # Выбор временного периода для маршрутизации ГМ от сегодня\n        cp_list.click_button(cp_list.calendar_picker_button)\n        cp_list.click_button(cp_list.today_button)\n        # Выбор временного периода для маршрутизации ГМ до сегодня + час\n        new_time = cp_list.naw_time_change(60)\n        cp_list.click_button(cp_list.calendar_picker_button, index=2)\n        time.sleep(1)\n        cp_list.click_button(cp_list.today_button)\n        cp_list.click_button(cp_list.calendar_picker_button, index=2)\n        cp_list.backspace_num_and_input(cp_list.calendar_input, num=5, value=new_time)\n        cp_list.click_button(cp_list.calendar_ok_button)\n        # Клик по кнопке отправить ГМ на маршрутизацию\n>       cp_list.click_button(cp_list.send_button, do_assert=True)\n\ntests\\test_cargo_place_operations.py:150: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase\\base_class.py:430: in click_button\n    self.assert_word(element_dict)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.cargo_place_list_page.CargoPlaceList object at 0x00000275E32CCE90>\nelement_dict = {'name': 'send_button', 'reference': 'Грузоместа отправлены на маршрутизацию', 'reference_xpath': \"//div[@class='ant-modal-confirm-content']\", 'xpath': \"//button[contains(., 'Отправить')]\"}\nwait_type = 'clickable'\n\n    def assert_word(self, element_dict: Dict[str, str], wait_type: str = 'clickable') -> NoReturn:\n        \"\"\"\n        Проверяет, что текст элемента соответствует заданному значению. Если предоставлен 'reference_xpath',\n        использует его для точного определения элемента для проверки текста.\n    \n        Parameters\n        ----------\n        element_dict : dict\n            Словарь с информацией о локаторе элемента и ожидаемым текстом.\n            Может включать 'reference_xpath' для спецификации элемента, текст которого следует проверять.\n        wait_type : str, optional\n            Тип ожидания элемента ('clickable', 'visible', 'located', 'find').\n    \n        Raises\n        ------\n        AssertionError\n            Если текст элемента не соответствует ожидаемому значению.\n        \"\"\"\n        if 'reference_xpath' in element_dict:\n            reference_element = self.get_element(\n                {'name': 'Reference element', 'xpath': element_dict['reference_xpath']}, wait_type='located')['element']\n            time.sleep(0.1)  # Фиксированная задержка\n            value_word = reference_element.text\n        else:\n            element = self.get_element(element_dict, wait_type=wait_type)['element']\n            time.sleep(0.1)  # Фиксированная задержка\n            value_word = element.text\n    \n        with allure.step(title=f\"Assert \\\"{value_word}\\\" == \\\"{element_dict['reference']}\\\"\"):\n>           assert re.fullmatch(element_dict['reference'],\n                                value_word), f\"Expected '{element_dict['reference']}', but found '{value_word}'.\"\nE           AssertionError: Expected 'Грузоместа отправлены на маршрутизацию', but found 'Значение должно быть больше чем 6 авг. 2024 г., 23:27.'.\n\nbase\\base_class.py:243: AssertionError"}, "description": "ЛКЗ. Тест маршрутизации ГМ: создаем - ГМ, маршрутизируем - ТС 20т/90м3/ 33пал", "steps": [{"name": "Start test", "status": "passed", "start": 1722968769181, "stop": 1722968769181}, {"name": "Current url: https://enter.vezubr.com/login", "status": "passed", "start": 1722968794712, "stop": 1722968794712}, {"name": "Input in user_email_input: ***", "status": "passed", "start": 1722968794746, "stop": 1722968794846}, {"name": "Input in password_input: ***", "status": "passed", "start": 1722968794846, "stop": 1722968794922}, {"name": "Click on login_button", "status": "passed", "start": 1722968794922, "stop": 1722968794979}, {"name": "Click on sidebar_button", "status": "passed", "start": 1722968794979, "stop": 1722968825395}, {"name": "Move to assignments_hover", "status": "passed", "start": 1722968825395, "stop": 1722968826237}, {"name": "Click on cargo_place_list_button", "status": "passed", "steps": [{"name": "Assert \"Задания\" == \"Задания\"", "status": "passed", "start": 1722968827703, "stop": 1722968827703}], "start": 1722968826340, "stop": 1722968827703}, {"name": "Click on add_cargo_place_button", "status": "passed", "start": 1722968829217, "stop": 1722968830336}, {"name": "Select 'Короб' from dropdown cargo_place_type_select", "status": "passed", "start": 1722968830336, "stop": 1722968830485}, {"name": "Input in cp_quantity_input: 1", "status": "passed", "start": 1722968830485, "stop": 1722968830570}, {"name": "Input in cp_weight_input: 15390", "status": "passed", "start": 1722968830570, "stop": 1722968830646}, {"name": "Input in cp_value_input: 13", "status": "passed", "start": 1722968830646, "stop": 1722968830712}, {"name": "Input in cp_cost_input: 437987", "status": "passed", "start": 1722968830712, "stop": 1722968830778}, {"name": "Select 'Новое' from dropdown lkz_cp_status_select", "status": "passed", "start": 1722968830778, "stop": 1722968831420}, {"name": "Input in lkz_bar_code_input: ГМ-20240806182711", "status": "passed", "start": 1722968831421, "stop": 1722968831512}, {"name": "Select 'Екатеринбург' from dropdown departure_address_select", "status": "passed", "start": 1722968831512, "stop": 1722968831855}, {"name": "Select 'Екатеринбург' from dropdown delivery_address_select", "status": "passed", "start": 1722968831855, "stop": 1722968832174}, {"name": "Click on create_cargo_place_button", "status": "passed", "steps": [{"name": "Assert \"Грузоместо успешно создано\" == \"Грузоместо успешно создано\"", "status": "passed", "start": 1722968833895, "stop": 1722968833895}], "start": 1722968832175, "stop": 1722968833895}, {"name": "Click on create_button", "status": "passed", "start": 1722968833895, "stop": 1722968834572}, {"name": "Click on reset_button", "status": "passed", "start": 1722968834572, "stop": 1722968836071}, {"name": "Input in barcode_filter: ГМ-20240806182711", "status": "passed", "start": 1722968836071, "stop": 1722968838063}, {"name": "Click on action_menu_button", "status": "passed", "start": 1722968838063, "stop": 1722968838127}, {"name": "Click on multi_select_button", "status": "passed", "start": 1722968838127, "stop": 1722968838206}, {"name": "Click on cp_list_checkbox index 3", "status": "passed", "start": 1722968838206, "stop": 1722968838286}, {"name": "Click on multi_route_button", "status": "passed", "start": 1722968838286, "stop": 1722968838402}, {"name": "Select '20т / 90м3 / 33пал.' from dropdown vehicle_type_select at dropdown index 2", "status": "passed", "start": 1722968838402, "stop": 1722968839579}, {"name": "Input in quantity_vehicle_input: 1", "status": "passed", "start": 1722968839579, "stop": 1722968839672}, {"name": "Click on calendar_picker_button", "status": "passed", "start": 1722968839672, "stop": 1722968839749}, {"name": "Click on today_button", "status": "passed", "start": 1722968839749, "stop": 1722968840332}, {"name": "Click on calendar_picker_button index 2", "status": "passed", "start": 1722968840332, "stop": 1722968840406}, {"name": "Click on today_button", "status": "passed", "start": 1722968841407, "stop": 1722968841473}, {"name": "Click on calendar_picker_button index 2", "status": "passed", "start": 1722968841473, "stop": 1722968841535}, {"name": "Backspace 5 times and input in today_button: 0025", "status": "passed", "start": 1722968841535, "stop": 1722968842132}, {"name": "Click on calendar_ok_button", "status": "passed", "start": 1722968842132, "stop": 1722968842186}, {"name": "Click on send_button", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 'Грузоместа отправлены на маршрутизацию', but found 'Значение должно быть больше чем 6 авг. 2024 г., 23:27.'.\n", "trace": "  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\base\\base_class.py\", line 430, in click_button\n    self.assert_word(element_dict)\n  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\base\\base_class.py\", line 243, in assert_word\n    assert re.fullmatch(element_dict['reference'],\n"}, "steps": [{"name": "Assert \"Значение должно быть больше чем 6 авг. 2024 г., 23:27.\" == \"Грузоместа отправлены на маршрутизацию\"", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 'Грузоместа отправлены на маршрутизацию', but found 'Значение должно быть больше чем 6 авг. 2024 г., 23:27.'.\n", "trace": "  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\base\\base_class.py\", line 243, in assert_word\n    assert re.fullmatch(element_dict['reference'],\n"}, "start": 1722968843889, "stop": 1722968843889}], "start": 1722968842186, "stop": 1722968843889}], "start": 1722968767739, "stop": 1722968843889, "uuid": "42e72b68-018d-4271-8812-6c01b9639a28", "historyId": "e7feaecad3e492a4f673cdcc879f8e17", "testCaseId": "e7feaecad3e492a4f673cdcc879f8e17", "fullName": "tests.test_cargo_place_operations#test_cargo_place_routing_lkz", "labels": [{"name": "story", "value": "Critical path test"}, {"name": "feature", "value": "Маршрутизация грузомест"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_cargo_place_operations"}, {"name": "host", "value": "DESKTOP-J5EC1KL"}, {"name": "thread", "value": "18692-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_cargo_place_operations"}]}
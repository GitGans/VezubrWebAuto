{"name": "test_cargo_place_multi_edit_lke", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"vz-form-item__label \">...</span> is not clickable at point (804, 205). Other element would receive the click: <div class=\"ant-modal-confirm-content\">...</div>\n  (Session info: chrome=127.0.6533.89)\nStacktrace:\n\tGetHandleVerifier [0x00007FF642B29632+30946]\n\t(No symbol) [0x00007FF642ADE3C9]\n\t(No symbol) [0x00007FF6429D6FDA]\n\t(No symbol) [0x00007FF642A2FEEE]\n\t(No symbol) [0x00007FF642A2D962]\n\t(No symbol) [0x00007FF642A2AE7B]\n\t(No symbol) [0x00007FF642A2A095]\n\t(No symbol) [0x00007FF642A1C271]\n\t(No symbol) [0x00007FF642A4CA6A]\n\t(No symbol) [0x00007FF642A1BBB6]\n\t(No symbol) [0x00007FF642A4CC80]\n\t(No symbol) [0x00007FF642A6B041]\n\t(No symbol) [0x00007FF642A4C813]\n\t(No symbol) [0x00007FF642A1A6E5]\n\t(No symbol) [0x00007FF642A1B021]\n\tGetHandleVerifier [0x00007FF642C5F83D+1301229]\n\tGetHandleVerifier [0x00007FF642C6BDB7+1351783]\n\tGetHandleVerifier [0x00007FF642C62A03+1313971]\n\tGetHandleVerifier [0x00007FF642B5DD06+245686]\n\t(No symbol) [0x00007FF642AE758F]\n\t(No symbol) [0x00007FF642AE3804]\n\t(No symbol) [0x00007FF642AE3992]\n\t(No symbol) [0x00007FF642ADA3EF]\n\tBaseThreadInitThunk [0x00007FFF1A2A7374+20]\n\tRtlUserThreadStart [0x00007FFF1A6FCC91+33]", "trace": "domain = 'com'\n\n    @allure.story(\"Critical path test\")\n    @allure.feature('Массовое редактирование грузомест')\n    @allure.description('ЛКЭ. Тест массового редактирования ГМ ГВ: создаем - родительское ГМ ГВ, выбираем - 2-е и 3-е ГМ в '\n                        'списке, статус - Принято, адреса к статусу/отправления/доставки - Первый в списке, родительске ГМ '\n                        '- Созданное ГМ с баркодом - cp_stamp')\n    def test_cargo_place_multi_edit_lke(domain):\n        # Инициализация базовых объектов и авторизация под ролью 'lke'\n        base, sidebar = base_test_with_login(domain=domain, role='lke')\n    \n        # Переход к списку грузомест\n        sidebar.move_and_click(move_to=sidebar.assignments_hover, click_to=sidebar.cargo_place_list_button,\n                               do_assert=True, wait=\"lst\")\n        time.sleep(1.5)\n        cp_list = CargoPlaceList(base.driver)\n        # Клик по кнопке добавления грузоместа\n        cp_list.click_button(cp_list.add_cargo_place_button, wait=\"form\")\n    \n        add_cp = CargoPlaceAdd(base.driver)\n        # Выбор владельца грузоместа \"Auto LKZ\"\n>       add_cp.dropdown_click_input_click(add_cp.cargo_place_owner_select, \"Auto LKZ\")\n\ntests\\test_cargo_place_operations.py:177: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase\\base_class.py:500: in dropdown_click_input_click\n    dropdown_dict['element'].click()\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:394: in _execute\n    return self._parent.execute(command, params)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000275E3E93210>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF642ADA3EF]\\\\n\\\\tBaseThreadInitThunk [0x00007FFF1A2A7374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFF1A6FCC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"vz-form-item__label \">...</span> is not clickable at point (804, 205). Other element would receive the click: <div class=\"ant-modal-confirm-content\">...</div>\nE         (Session info: chrome=127.0.6533.89)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF642B29632+30946]\nE       \t(No symbol) [0x00007FF642ADE3C9]\nE       \t(No symbol) [0x00007FF6429D6FDA]\nE       \t(No symbol) [0x00007FF642A2FEEE]\nE       \t(No symbol) [0x00007FF642A2D962]\nE       \t(No symbol) [0x00007FF642A2AE7B]\nE       \t(No symbol) [0x00007FF642A2A095]\nE       \t(No symbol) [0x00007FF642A1C271]\nE       \t(No symbol) [0x00007FF642A4CA6A]\nE       \t(No symbol) [0x00007FF642A1BBB6]\nE       \t(No symbol) [0x00007FF642A4CC80]\nE       \t(No symbol) [0x00007FF642A6B041]\nE       \t(No symbol) [0x00007FF642A4C813]\nE       \t(No symbol) [0x00007FF642A1A6E5]\nE       \t(No symbol) [0x00007FF642A1B021]\nE       \tGetHandleVerifier [0x00007FF642C5F83D+1301229]\nE       \tGetHandleVerifier [0x00007FF642C6BDB7+1351783]\nE       \tGetHandleVerifier [0x00007FF642C62A03+1313971]\nE       \tGetHandleVerifier [0x00007FF642B5DD06+245686]\nE       \t(No symbol) [0x00007FF642AE758F]\nE       \t(No symbol) [0x00007FF642AE3804]\nE       \t(No symbol) [0x00007FF642AE3992]\nE       \t(No symbol) [0x00007FF642ADA3EF]\nE       \tBaseThreadInitThunk [0x00007FFF1A2A7374+20]\nE       \tRtlUserThreadStart [0x00007FFF1A6FCC91+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "description": "ЛКЭ. Тест массового редактирования ГМ ГВ: создаем - родительское ГМ ГВ, выбираем - 2-е и 3-е ГМ в списке, статус - Принято, адреса к статусу/отправления/доставки - Первый в списке, родительске ГМ - Созданное ГМ с баркодом - cp_stamp", "steps": [{"name": "Start test", "status": "passed", "start": 1722968845507, "stop": 1722968845507}, {"name": "Current url: https://enter.vezubr.com/login", "status": "passed", "start": 1722968870954, "stop": 1722968870954}, {"name": "Input in user_email_input: ***", "status": "passed", "start": 1722968870981, "stop": 1722968871077}, {"name": "Input in password_input: ***", "status": "passed", "start": 1722968871077, "stop": 1722968871162}, {"name": "Click on login_button", "status": "passed", "start": 1722968871162, "stop": 1722968871216}, {"name": "Click on sidebar_button", "status": "passed", "start": 1722968871216, "stop": 1722968899959}, {"name": "Move to assignments_hover", "status": "passed", "start": 1722968899959, "stop": 1722968900777}, {"name": "Click on cargo_place_list_button", "status": "passed", "steps": [{"name": "Assert \"Задания\" == \"Задания\"", "status": "passed", "start": 1722968902255, "stop": 1722968902255}], "start": 1722968900881, "stop": 1722968902255}, {"name": "Click on add_cargo_place_button", "status": "passed", "start": 1722968903769, "stop": 1722968904892}, {"name": "Select 'Auto LKZ' from dropdown cargo_place_owner_select", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"vz-form-item__label \">...</span> is not clickable at point (804, 205). Other element would receive the click: <div class=\"ant-modal-confirm-content\">...</div>\n  (Session info: chrome=127.0.6533.89)\nStacktrace:\n\tGetHandleVerifier [0x00007FF642B29632+30946]\n\t(No symbol) [0x00007FF642ADE3C9]\n\t(No symbol) [0x00007FF6429D6FDA]\n\t(No symbol) [0x00007FF642A2FEEE]\n\t(No symbol) [0x00007FF642A2D962]\n\t(No symbol) [0x00007FF642A2AE7B]\n\t(No symbol) [0x00007FF642A2A095]\n\t(No symbol) [0x00007FF642A1C271]\n\t(No symbol) [0x00007FF642A4CA6A]\n\t(No symbol) [0x00007FF642A1BBB6]\n\t(No symbol) [0x00007FF642A4CC80]\n\t(No symbol) [0x00007FF642A6B041]\n\t(No symbol) [0x00007FF642A4C813]\n\t(No symbol) [0x00007FF642A1A6E5]\n\t(No symbol) [0x00007FF642A1B021]\n\tGetHandleVerifier [0x00007FF642C5F83D+1301229]\n\tGetHandleVerifier [0x00007FF642C6BDB7+1351783]\n\tGetHandleVerifier [0x00007FF642C62A03+1313971]\n\tGetHandleVerifier [0x00007FF642B5DD06+245686]\n\t(No symbol) [0x00007FF642AE758F]\n\t(No symbol) [0x00007FF642AE3804]\n\t(No symbol) [0x00007FF642AE3992]\n\t(No symbol) [0x00007FF642ADA3EF]\n\tBaseThreadInitThunk [0x00007FFF1A2A7374+20]\n\tRtlUserThreadStart [0x00007FFF1A6FCC91+33]\n\n", "trace": "  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\base\\base_class.py\", line 500, in dropdown_click_input_click\n    dropdown_dict['element'].click()\n  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1722968904892, "stop": 1722968905962}], "start": 1722968843920, "stop": 1722968905962, "uuid": "bb027fee-a343-4b94-95d3-ec070880ff0a", "historyId": "f9cee6dc3be818cf098f66b7e09cabdf", "testCaseId": "f9cee6dc3be818cf098f66b7e09cabdf", "fullName": "tests.test_cargo_place_operations#test_cargo_place_multi_edit_lke", "labels": [{"name": "feature", "value": "Массовое редактирование грузомест"}, {"name": "story", "value": "Critical path test"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_cargo_place_operations"}, {"name": "host", "value": "DESKTOP-J5EC1KL"}, {"name": "thread", "value": "18692-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_cargo_place_operations"}]}
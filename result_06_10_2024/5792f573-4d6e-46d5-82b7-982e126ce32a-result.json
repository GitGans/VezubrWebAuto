{"name": "test_cargo_place_multi_edit_lkz[lkz]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: Element 'field_change_select' is not clickable", "trace": "self = <pages.cargo_place_list_page.CargoPlaceList object at 0x0000021A8D93A9D0>\nelement_info = {'name': 'field_change_select', 'xpath': \"(//div[@class='ant-select-selection__rendered'])[5]\"}\nwait_type = 'clickable'\n\n    def get_element(self, element_info: Dict[str, str], wait_type: str = 'clickable') -> Dict[str, Any]:\n        \"\"\"\n        Ожидает элемент в зависимости от выбранного типа ожидания и возвращает его.\n    \n        Parameters\n        ----------\n        element_info : dict\n            Информация о локаторе элемента.\n        wait_type : str, optional\n            Тип ожидания: 'clickable', 'visible', 'located', 'find', или 'invisibility'.\n    \n        Returns\n        -------\n        dict\n            Словарь с информацией о найденном элементе.\n        \"\"\"\n        try:\n            if wait_type == 'clickable':\n>               element = WebDriverWait(self.driver, 60).until(\n\nbase\\base_class.py:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b6c33864551f9fb1b07a5779005062d9\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x0000021A8D955300>\nmessage = ''\n\n    def until(self, method: Callable[[WebDriver], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF62FB3B125+29573]\nE       \t(No symbol) [0x00007FF62FAAFF50]\nE       \t(No symbol) [0x00007FF62F96B6EA]\nE       \t(No symbol) [0x00007FF62F9BF815]\nE       \t(No symbol) [0x00007FF62F9BFA6C]\nE       \t(No symbol) [0x00007FF62FA0B917]\nE       \t(No symbol) [0x00007FF62F9E733F]\nE       \t(No symbol) [0x00007FF62FA086BC]\nE       \t(No symbol) [0x00007FF62F9E70A3]\nE       \t(No symbol) [0x00007FF62F9B12DF]\nE       \t(No symbol) [0x00007FF62F9B2441]\nE       \tGetHandleVerifier [0x00007FF62FE6C76D+3377613]\nE       \tGetHandleVerifier [0x00007FF62FEB7B67+3685831]\nE       \tGetHandleVerifier [0x00007FF62FEACF8B+3641835]\nE       \tGetHandleVerifier [0x00007FF62FBFB2A6+816390]\nE       \t(No symbol) [0x00007FF62FABB25F]\nE       \t(No symbol) [0x00007FF62FAB7084]\nE       \t(No symbol) [0x00007FF62FAB7220]\nE       \t(No symbol) [0x00007FF62FAA607F]\nE       \tBaseThreadInitThunk [0x00007FFEF1907374+20]\nE       \tRtlUserThreadStart [0x00007FFEF389CC91+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:101: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nbase_fixture = (<base.base_class.Base object at 0x0000021A8DDD3690>, <pages.sidebar.SideBar object at 0x0000021A8DDD0110>)\ndomain = 'com'\n\n    @allure.story(\"Critical path test\")\n    @allure.feature('Массовое редактирование грузомест')\n    @allure.description('ЛКЗ. Тест массового редактирования ГМ: создаем - родительское ГМ, выбираем - 2-е и 3-е ГМ в '\n                        'списке, статус - Принято, адреса к статусу/отправления/доставки - Первый в списке, родительске ГМ '\n                        '- Созданное ГМ с баркодом - cp_stamp')\n    @pytest.mark.parametrize('base_fixture', ['lkz'], indirect=True)  # Параметризация роли\n    def test_cargo_place_multi_edit_lkz(base_fixture, domain):\n        # Инициализация базовых объектов через фикстуру\n        base, sidebar = base_fixture\n    \n        # Переход к списку грузомест\n        sidebar.move_and_click(move_to=sidebar.assignments_hover, click_to=sidebar.cargo_place_list_button,\n                               do_assert=True, wait=\"lst\")\n        time.sleep(1.5)\n        cp_list = CargoPlaceList(base.driver)\n        # Клик по кнопке добавления грузоместа\n        cp_list.click_button(cp_list.add_cargo_place_button, wait=\"form\")\n    \n        add_cp = CargoPlaceAdd(base.driver)\n        # Добавление полного базового грузоместа\n        cp_stamp = add_cp.add_full_cargo_place_lkz()\n    \n        cp_list = CargoPlaceList(base.driver)\n        # Сброс фильтров\n        cp_list.click_button(cp_list.reset_button, wait=\"lst\")\n        # Клик по кнопке экшен меню\n        cp_list.click_button(cp_list.action_menu_button)\n        # Клик по кнопке мультивыбор ГМ\n        cp_list.click_button(cp_list.multi_select_button)\n        # Выбор второго чек-бокса\n        cp_list.click_button(cp_list.cp_list_checkbox, index=4)\n        # Выбор третьего чек-бокса\n        cp_list.click_button(cp_list.cp_list_checkbox, index=3)\n        # Клик по кнопке редактировать\n        cp_list.click_button(cp_list.multi_edit_button)\n        # Изменение статуса грузомест\n>       cp_list.dropdown_click_input_click(cp_list.field_change_select, \"Статус\")\n\ntests\\test_cargo_place_operations.py:226: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbase\\base_class.py:527: in dropdown_click_input_click\n    dropdown_dict = self.get_element({\"name\": element_dict['name'], \"xpath\": xpath_dropdown})\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.cargo_place_list_page.CargoPlaceList object at 0x0000021A8D93A9D0>\nelement_info = {'name': 'field_change_select', 'xpath': \"(//div[@class='ant-select-selection__rendered'])[5]\"}\nwait_type = 'clickable'\n\n    def get_element(self, element_info: Dict[str, str], wait_type: str = 'clickable') -> Dict[str, Any]:\n        \"\"\"\n        Ожидает элемент в зависимости от выбранного типа ожидания и возвращает его.\n    \n        Parameters\n        ----------\n        element_info : dict\n            Информация о локаторе элемента.\n        wait_type : str, optional\n            Тип ожидания: 'clickable', 'visible', 'located', 'find', или 'invisibility'.\n    \n        Returns\n        -------\n        dict\n            Словарь с информацией о найденном элементе.\n        \"\"\"\n        try:\n            if wait_type == 'clickable':\n                element = WebDriverWait(self.driver, 60).until(\n                    EC.element_to_be_clickable((By.XPATH, element_info['xpath'])))\n            elif wait_type == 'visible':\n                element = WebDriverWait(self.driver, 15).until(\n                    EC.visibility_of_element_located((By.XPATH, element_info['xpath'])))\n            elif wait_type == 'located':\n                element = WebDriverWait(self.driver, 60).until(\n                    EC.presence_of_element_located((By.XPATH, element_info['xpath'])))\n            elif wait_type == 'find':\n                element = self.driver.find_element(By.XPATH, element_info['xpath'])\n            elif wait_type == 'invisibility':\n                WebDriverWait(self.driver, 60).until(\n                    EC.invisibility_of_element_located((By.XPATH, element_info['xpath'])))\n                element = None\n            else:\n                raise ValueError(f\"Unsupported wait type: {wait_type}\")\n    \n            return {'name': element_info['name'], 'element': element}\n    \n        except TimeoutException:\n            message = \"\"\n            if wait_type == 'clickable':\n                message = f\"Element '{element_info['name']}' is not clickable\"\n            elif wait_type == 'visible':\n                message = f\"Element '{element_info['name']}' is not visible\"\n                with allure.step(message):\n                    print(message)\n                # Возвращаем None, чтобы тест продолжился\n                return {'name': element_info['name'], 'element': None}\n            elif wait_type == 'located':\n                message = f\"Element '{element_info['name']}' is not located\"\n            elif wait_type == 'find':\n                message = f\"Element '{element_info['name']}' is not found\"\n            elif wait_type == 'invisibility':\n                message = f\"Element '{element_info['name']}' is not invisible\"\n    \n            with allure.step(message):\n                print(message)\n>           raise TimeoutException(message)\nE           selenium.common.exceptions.TimeoutException: Message: Element 'field_change_select' is not clickable\n\nbase\\base_class.py:174: TimeoutException"}, "description": "ЛКЗ. Тест массового редактирования ГМ: создаем - родительское ГМ, выбираем - 2-е и 3-е ГМ в списке, статус - Принято, адреса к статусу/отправления/доставки - Первый в списке, родительске ГМ - Созданное ГМ с баркодом - cp_stamp", "steps": [{"name": "Move to assignments_hover", "status": "passed", "start": 1728208353096, "stop": 1728208354680}, {"name": "Click on cargo_place_list_button", "status": "passed", "steps": [{"name": "Element 'loading_list' is not visible", "status": "passed", "start": 1728208373087, "stop": 1728208373088}, {"name": "Assert \"Задания\" == \"Задания\"", "status": "passed", "start": 1728208373960, "stop": 1728208373960}], "start": 1728208354781, "stop": 1728208373960}, {"name": "Click on add_cargo_place_button", "status": "passed", "start": 1728208375462, "stop": 1728208380946}, {"name": "Select 'Короб' from dropdown cargo_place_type_select", "status": "passed", "start": 1728208380946, "stop": 1728208384505}, {"name": "Input in cp_quantity_input: 5", "status": "passed", "start": 1728208384505, "stop": 1728208387910}, {"name": "Input in cp_weight_input: 8626", "status": "passed", "start": 1728208387910, "stop": 1728208391513}, {"name": "Input in cp_value_input: 30.4", "status": "passed", "start": 1728208391513, "stop": 1728208394268}, {"name": "Input in cp_cost_input: 901785", "status": "passed", "start": 1728208394268, "stop": 1728208400596}, {"name": "Select 'Новое' from dropdown lkz_cp_status_select", "status": "passed", "start": 1728208400596, "stop": 1728208412278}, {"name": "Input in lkz_cp_title_input: ГМ-20241006095332", "status": "passed", "start": 1728208412278, "stop": 1728208416285}, {"name": "Input in lkz_invoice_number_input: ГМ-20241006095332", "status": "passed", "start": 1728208416286, "stop": 1728208418813}, {"name": "Input in lkz_bar_code_input: ГМ-20241006095332", "status": "passed", "start": 1728208418817, "stop": 1728208420193}, {"name": "Input in lkz_seal_number_input: ГМ-20241006095332", "status": "passed", "start": 1728208420193, "stop": 1728208422277}, {"name": "Input in temp_from_input: -1", "status": "passed", "start": 1728208422278, "stop": 1728208424344}, {"name": "Input in temp_until_input: 4", "status": "passed", "start": 1728208424345, "stop": 1728208425826}, {"name": "Input in lkz_external_id_input: ГМ-20241006095332", "status": "passed", "start": 1728208425826, "stop": 1728208427819}, {"name": "Input in lkz_comment_input: ГМ-20241006095332", "status": "passed", "start": 1728208427819, "stop": 1728208430358}, {"name": "Select 'Свердловская обл, г Верхняя Пышма, Успенский пр-кт, д 103а' from dropdown departure_address_select", "status": "passed", "start": 1728208430358, "stop": 1728208435328}, {"name": "Select 'Свердловская обл, г Березовский, ул Театральная, д 13' from dropdown delivery_address_select", "status": "passed", "start": 1728208435328, "stop": 1728208441972}, {"name": "Click on create_cargo_place_button", "status": "passed", "steps": [{"name": "Assert \"Грузоместо успешно создано\" == \"Грузоместо успешно создано\"", "status": "passed", "start": 1728208454467, "stop": 1728208454468}], "start": 1728208441972, "stop": 1728208454468}, {"name": "Click on create_button", "status": "passed", "start": 1728208454468, "stop": 1728208457895}, {"name": "Click on reset_button", "status": "passed", "start": 1728208457895, "stop": 1728208476770}, {"name": "Click on action_menu_button", "status": "passed", "start": 1728208476770, "stop": 1728208479442}, {"name": "Click on multi_select_button", "status": "passed", "start": 1728208479442, "stop": 1728208485317}, {"name": "Click on cp_list_checkbox index 4", "status": "passed", "start": 1728208485318, "stop": 1728208489426}, {"name": "Click on cp_list_checkbox index 3", "status": "passed", "start": 1728208489427, "stop": 1728208493766}, {"name": "Click on multi_edit_button", "status": "passed", "start": 1728208493766, "stop": 1728208496721}, {"name": "Select 'Статус' from dropdown field_change_select", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: Element 'field_change_select' is not clickable\n\n", "trace": "  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\base\\base_class.py\", line 527, in dropdown_click_input_click\n    dropdown_dict = self.get_element({\"name\": element_dict['name'], \"xpath\": xpath_dropdown})\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\base\\base_class.py\", line 174, in get_element\n    raise TimeoutException(message)\n"}, "steps": [{"name": "Element 'field_change_select' is not clickable", "status": "passed", "start": 1728208556782, "stop": 1728208556782}], "start": 1728208496722, "stop": 1728208556782}, {"name": "Screen taken: tests_test_cargo_place_operations.py_test_cargo_place_multi_edit_lkz[lkz]_2024.10.06.09.55.57.png", "status": "passed", "start": 1728208557455, "stop": 1728208557456}], "parameters": [{"name": "base_fixture", "value": "'lkz'"}], "start": 1728208353096, "stop": 1728208556792, "uuid": "b19e145a-3cea-4c60-8755-16242d69db40", "historyId": "2dfb12e5b83b3c8d3d14052f1931ae6d", "testCaseId": "4ea13f4e82195052e928889ca2808ff1", "fullName": "tests.test_cargo_place_operations#test_cargo_place_multi_edit_lkz", "labels": [{"name": "feature", "value": "Массовое редактирование грузомест"}, {"name": "story", "value": "Critical path test"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_cargo_place_operations"}, {"name": "host", "value": "DESKTOP-J5EC1KL"}, {"name": "thread", "value": "7724-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_cargo_place_operations"}]}
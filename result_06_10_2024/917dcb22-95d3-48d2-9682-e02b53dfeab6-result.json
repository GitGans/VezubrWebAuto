{"name": "test_cargo_place_transfer_lkz[lkz]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: Element 'publish_later_button' is not clickable", "trace": "self = <pages.request_delivery_add_page.DeliveryAdd object at 0x000001CF392E35D0>\nelement_info = {'name': 'publish_later_button', 'xpath': \"//button[.//span[text()='Опубликовать позже']]\"}\nwait_type = 'clickable'\n\n    def get_element(self, element_info: Dict[str, str], wait_type: str = 'clickable') -> Dict[str, Any]:\n        \"\"\"\n        Ожидает элемент в зависимости от выбранного типа ожидания и возвращает его.\n    \n        Parameters\n        ----------\n        element_info : dict\n            Информация о локаторе элемента.\n        wait_type : str, optional\n            Тип ожидания: 'clickable', 'visible', 'located', 'find', или 'invisibility'.\n    \n        Returns\n        -------\n        dict\n            Словарь с информацией о найденном элементе.\n        \"\"\"\n        try:\n            if wait_type == 'clickable':\n>               element = WebDriverWait(self.driver, 60).until(\n\nbase\\base_class.py:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"054f0558b8cef83c294c34304432dec3\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001CF392B7380>\nmessage = ''\n\n    def until(self, method: Callable[[WebDriver], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF62FB3B125+29573]\nE       \t(No symbol) [0x00007FF62FAAFF50]\nE       \t(No symbol) [0x00007FF62F96B6EA]\nE       \t(No symbol) [0x00007FF62F9BF815]\nE       \t(No symbol) [0x00007FF62F9BFA6C]\nE       \t(No symbol) [0x00007FF62FA0B917]\nE       \t(No symbol) [0x00007FF62F9E733F]\nE       \t(No symbol) [0x00007FF62FA086BC]\nE       \t(No symbol) [0x00007FF62F9E70A3]\nE       \t(No symbol) [0x00007FF62F9B12DF]\nE       \t(No symbol) [0x00007FF62F9B2441]\nE       \tGetHandleVerifier [0x00007FF62FE6C76D+3377613]\nE       \tGetHandleVerifier [0x00007FF62FEB7B67+3685831]\nE       \tGetHandleVerifier [0x00007FF62FEACF8B+3641835]\nE       \tGetHandleVerifier [0x00007FF62FBFB2A6+816390]\nE       \t(No symbol) [0x00007FF62FABB25F]\nE       \t(No symbol) [0x00007FF62FAB7084]\nE       \t(No symbol) [0x00007FF62FAB7220]\nE       \t(No symbol) [0x00007FF62FAA607F]\nE       \tBaseThreadInitThunk [0x00007FFEF1907374+20]\nE       \tRtlUserThreadStart [0x00007FFEF389CC91+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:101: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nbase_fixture = (<base.base_class.Base object at 0x000001CF392EB2D0>, <pages.sidebar.SideBar object at 0x000001CF392E9510>)\ndomain = 'com'\n\n    @allure.story(\"Smoke test\")\n    @allure.feature('Передача грузомест экспедитору')\n    @allure.description('ЛКЗ. Тест передачи ГМ Экспедитору: '\n                        'создаем - ГМ ГВ, передаем - Экс, создаем - LTL заявку, публикация - не публикуем')\n    @pytest.mark.parametrize('base_fixture', ['lkz'], indirect=True)  # Параметризация роли\n    def test_cargo_place_transfer_lkz(base_fixture, domain):\n        # Инициализация базовых объектов через фикстуру\n        base, sidebar = base_fixture\n    \n        # Переход к списку грузомест\n        sidebar.move_and_click(move_to=sidebar.assignments_hover, click_to=sidebar.cargo_place_list_button,\n                               do_assert=True, wait=\"lst\")\n        time.sleep(1.5)\n        cp_list = CargoPlaceList(base.driver)\n        # Клик по кнопке добавления грузоместа\n        cp_list.click_button(cp_list.add_cargo_place_button, wait=\"form\")\n    \n        add_cp = CargoPlaceAdd(base.driver)\n        # Добавление полного базового грузоместа\n        cp_stamp = add_cp.add_base_cargo_place_lkz()\n    \n        cp_list = CargoPlaceList(base.driver)\n        # Сброс фильтров\n        cp_list.click_button(cp_list.reset_button, wait=\"lst\")\n        # Ввод штрихкода грузоместа в поле фильтрации\n        cp_list.input_in_field(cp_list.barcode_filter, value=cp_stamp, wait=\"lst\")\n        # Клик по кнопке экшен меню\n        cp_list.click_button(cp_list.action_menu_button)\n        # Клик по кнопке мультивыбор ГМ\n        cp_list.click_button(cp_list.multi_select_button)\n        # Выбор первого чек-бокса\n        cp_list.click_button(cp_list.cp_list_checkbox, index=3)\n        # Клик по кнопке передать экспедитору\n        cp_list.click_button(cp_list.multi_transfer_button)\n    \n        ltl = DeliveryAdd(base.driver)\n        # Заполнение базовой информации для LTL заявки\n        ltl.add_base_ltl()\n        time.sleep(1)\n        # Публикация заявки позже\n>       ltl.click_button(ltl.publish_later_button, do_assert=True)\n\ntests\\test_cargo_place_operations.py:343: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbase\\base_class.py:414: in click_button\n    button_dict = self.get_element(updated_element_dict, wait_type)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.request_delivery_add_page.DeliveryAdd object at 0x000001CF392E35D0>\nelement_info = {'name': 'publish_later_button', 'xpath': \"//button[.//span[text()='Опубликовать позже']]\"}\nwait_type = 'clickable'\n\n    def get_element(self, element_info: Dict[str, str], wait_type: str = 'clickable') -> Dict[str, Any]:\n        \"\"\"\n        Ожидает элемент в зависимости от выбранного типа ожидания и возвращает его.\n    \n        Parameters\n        ----------\n        element_info : dict\n            Информация о локаторе элемента.\n        wait_type : str, optional\n            Тип ожидания: 'clickable', 'visible', 'located', 'find', или 'invisibility'.\n    \n        Returns\n        -------\n        dict\n            Словарь с информацией о найденном элементе.\n        \"\"\"\n        try:\n            if wait_type == 'clickable':\n                element = WebDriverWait(self.driver, 60).until(\n                    EC.element_to_be_clickable((By.XPATH, element_info['xpath'])))\n            elif wait_type == 'visible':\n                element = WebDriverWait(self.driver, 15).until(\n                    EC.visibility_of_element_located((By.XPATH, element_info['xpath'])))\n            elif wait_type == 'located':\n                element = WebDriverWait(self.driver, 60).until(\n                    EC.presence_of_element_located((By.XPATH, element_info['xpath'])))\n            elif wait_type == 'find':\n                element = self.driver.find_element(By.XPATH, element_info['xpath'])\n            elif wait_type == 'invisibility':\n                WebDriverWait(self.driver, 60).until(\n                    EC.invisibility_of_element_located((By.XPATH, element_info['xpath'])))\n                element = None\n            else:\n                raise ValueError(f\"Unsupported wait type: {wait_type}\")\n    \n            return {'name': element_info['name'], 'element': element}\n    \n        except TimeoutException:\n            message = \"\"\n            if wait_type == 'clickable':\n                message = f\"Element '{element_info['name']}' is not clickable\"\n            elif wait_type == 'visible':\n                message = f\"Element '{element_info['name']}' is not visible\"\n                with allure.step(message):\n                    print(message)\n                # Возвращаем None, чтобы тест продолжился\n                return {'name': element_info['name'], 'element': None}\n            elif wait_type == 'located':\n                message = f\"Element '{element_info['name']}' is not located\"\n            elif wait_type == 'find':\n                message = f\"Element '{element_info['name']}' is not found\"\n            elif wait_type == 'invisibility':\n                message = f\"Element '{element_info['name']}' is not invisible\"\n    \n            with allure.step(message):\n                print(message)\n>           raise TimeoutException(message)\nE           selenium.common.exceptions.TimeoutException: Message: Element 'publish_later_button' is not clickable\n\nbase\\base_class.py:174: TimeoutException"}, "description": "ЛКЗ. Тест передачи ГМ Экспедитору: создаем - ГМ ГВ, передаем - Экс, создаем - LTL заявку, публикация - не публикуем", "steps": [{"name": "Move to assignments_hover", "status": "passed", "start": 1728208303607, "stop": 1728208304530}, {"name": "Click on cargo_place_list_button", "status": "passed", "steps": [{"name": "Assert \"Задания\" == \"Задания\"", "status": "passed", "start": 1728208313323, "stop": 1728208313323}], "start": 1728208304631, "stop": 1728208313323}, {"name": "Click on add_cargo_place_button", "status": "passed", "start": 1728208314854, "stop": 1728208318382}, {"name": "Select 'Короб' from dropdown cargo_place_type_select", "status": "passed", "start": 1728208318382, "stop": 1728208319605}, {"name": "Input in cp_weight_input: 904", "status": "passed", "start": 1728208319605, "stop": 1728208320481}, {"name": "Input in cp_value_input: 1.8", "status": "passed", "start": 1728208320485, "stop": 1728208320906}, {"name": "Input in cp_cost_input: 100242", "status": "passed", "start": 1728208320906, "stop": 1728208321556}, {"name": "Input in lkz_bar_code_input: ГМ-20241006095201", "status": "passed", "start": 1728208321556, "stop": 1728208322197}, {"name": "Select 'Новое' from dropdown lkz_cp_status_select", "status": "passed", "start": 1728208322197, "stop": 1728208324929}, {"name": "Select 'Свердловская обл, г Верхняя Пышма, Успенский пр-кт, д 103а' from dropdown departure_address_select", "status": "passed", "start": 1728208324929, "stop": 1728208331291}, {"name": "Select 'Свердловская обл, г Березовский, ул Театральная, д 13' from dropdown delivery_address_select", "status": "passed", "start": 1728208331292, "stop": 1728208338788}, {"name": "Click on create_cargo_place_button", "status": "passed", "steps": [{"name": "Assert \"Грузоместо успешно создано\" == \"Грузоместо успешно создано\"", "status": "passed", "start": 1728208344894, "stop": 1728208344895}], "start": 1728208338789, "stop": 1728208344895}, {"name": "Click on create_button", "status": "passed", "start": 1728208344895, "stop": 1728208350003}, {"name": "Click on reset_button", "status": "passed", "start": 1728208350003, "stop": 1728208366854}, {"name": "Input in barcode_filter: ГМ-20241006095201", "status": "passed", "steps": [{"name": "Element 'loading_list' is not visible", "status": "passed", "start": 1728208386122, "stop": 1728208386129}], "start": 1728208366854, "stop": 1728208386235}, {"name": "Click on action_menu_button", "status": "passed", "start": 1728208386236, "stop": 1728208387822}, {"name": "Click on multi_select_button", "status": "passed", "start": 1728208387822, "stop": 1728208391212}, {"name": "Click on cp_list_checkbox index 3", "status": "passed", "start": 1728208391212, "stop": 1728208392986}, {"name": "Click on multi_transfer_button", "status": "passed", "start": 1728208392986, "stop": 1728208394627}, {"name": "Click on start_at_from_button", "status": "passed", "start": 1728208394627, "stop": 1728208406918}, {"name": "Click on today_button", "status": "passed", "start": 1728208406918, "stop": 1728208408329}, {"name": "Click on start_at_from_button", "status": "passed", "start": 1728208408330, "stop": 1728208412553}, {"name": "Backspace 5 times and input in start_at_from_input: 1525", "status": "passed", "start": 1728208412553, "stop": 1728208415335}, {"name": "Click on calendar_ok_button", "status": "passed", "start": 1728208415335, "stop": 1728208417022}, {"name": "Click on publish_later_button", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: Element 'publish_later_button' is not clickable\n\n", "trace": "  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\base\\base_class.py\", line 414, in click_button\n    button_dict = self.get_element(updated_element_dict, wait_type)\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\base\\base_class.py\", line 174, in get_element\n    raise TimeoutException(message)\n"}, "steps": [{"name": "Element 'publish_later_button' is not clickable", "status": "passed", "start": 1728208479494, "stop": 1728208479494}], "start": 1728208419037, "stop": 1728208479494}, {"name": "Screen taken: tests_test_cargo_place_operations.py_test_cargo_place_transfer_lkz[lkz]_2024.10.06.09.54.40.png", "status": "passed", "start": 1728208480753, "stop": 1728208480753}], "parameters": [{"name": "base_fixture", "value": "'lkz'"}], "start": 1728208303607, "stop": 1728208479519, "uuid": "4f5df0ec-e048-45a6-a67a-081c0dd854d1", "historyId": "4e0adfc1e5def0a93b2bddd0bc080c2a", "testCaseId": "ece254b758d6f973cb8f015a5a08afa6", "fullName": "tests.test_cargo_place_operations#test_cargo_place_transfer_lkz", "labels": [{"name": "story", "value": "Smoke test"}, {"name": "feature", "value": "Передача грузомест экспедитору"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_cargo_place_operations"}, {"name": "host", "value": "DESKTOP-J5EC1KL"}, {"name": "thread", "value": "19356-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_cargo_place_operations"}]}
{"name": "test_ftl_ml_tariff_copy_lkp[lkp]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=129.0.6668.101); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF6B695B125+29573]\n\t(No symbol) [0x00007FF6B68CFF50]\n\t(No symbol) [0x00007FF6B678B6EA]\n\t(No symbol) [0x00007FF6B67922BE]\n\t(No symbol) [0x00007FF6B6794637]\n\t(No symbol) [0x00007FF6B67946F0]\n\t(No symbol) [0x00007FF6B67E73D9]\n\t(No symbol) [0x00007FF6B67E4F3C]\n\t(No symbol) [0x00007FF6B67E2408]\n\t(No symbol) [0x00007FF6B67E161A]\n\t(No symbol) [0x00007FF6B67D36BE]\n\t(No symbol) [0x00007FF6B68072FA]\n\t(No symbol) [0x00007FF6B67D2FF6]\n\t(No symbol) [0x00007FF6B6807510]\n\t(No symbol) [0x00007FF6B68286BC]\n\t(No symbol) [0x00007FF6B68070A3]\n\t(No symbol) [0x00007FF6B67D12DF]\n\t(No symbol) [0x00007FF6B67D2441]\n\tGetHandleVerifier [0x00007FF6B6C8C76D+3377613]\n\tGetHandleVerifier [0x00007FF6B6CD7B67+3685831]\n\tGetHandleVerifier [0x00007FF6B6CCCF8B+3641835]\n\tGetHandleVerifier [0x00007FF6B6A1B2A6+816390]\n\t(No symbol) [0x00007FF6B68DB25F]\n\t(No symbol) [0x00007FF6B68D7084]\n\t(No symbol) [0x00007FF6B68D7220]\n\t(No symbol) [0x00007FF6B68C607F]\n\tBaseThreadInitThunk [0x00007FFE26487374+20]\n\tRtlUserThreadStart [0x00007FFE27CBCC91+33]", "trace": "base_fixture = (<base.base_class.Base object at 0x000002357FDC7F10>, <pages.sidebar.SideBar object at 0x000002357FDAE110>), domain = 'com'\n\n    @allure.story(\"Extended test\")\n    @allure.feature('Копирование тарифов')\n    @allure.description('ЛКП. Тест копирования FTL тарифа: фильтр - ПБ, тип - Пробег, маршрут - Старый, '\n                        'название - ПБ-timestamp, ТС - Старый, кузов - Старый, минималка/доп.адрес/ожидание - Рандом, '\n                        'оригинал - Удаляем')\n    @pytest.mark.parametrize('base_fixture', ['lkp'], indirect=True)  # Параметризация роли\n    def test_ftl_ml_tariff_copy_lkp(base_fixture, domain):\n        # Инициализация базовых объектов через фикстуру\n        base, sidebar = base_fixture\n    \n        # Переход к списку тарифов\n        sidebar.move_and_click(move_to=sidebar.directories_hover, click_to=sidebar.tariffs_list_button,\n                               do_assert=True, wait=\"lst\")\n    \n        tariff_list = TariffsList(base.driver)\n        # Фильтрация тарифов по названию \"ПБ\"\n        tariff_list.input_in_field(tariff_list.tariff_name_filter, \"ПБ\", wait=\"lst\")\n        # Выбор первого тарифа в списке\n        tariff_list.click_button(tariff_list.first_tariff_link, wait=\"form\")\n    \n        tariff = FTLTariffAdd(base.driver)\n        # Открытие меню действий и копирование тарифа\n        tariff.click_button(tariff.action_menu_button)\n        tariff.click_button(tariff.copy_tariff_button, wait=\"form\")\n        # Изменение названия тарифа\n        tariff.backspace_len_and_input(tariff.tariff_name_input, f\"ПБ-{base.get_timestamp()}\")\n        # Изменение параметров тарифа\n        tariff.click_button(tariff.extra_mileage_input)\n        tariff.backspace_len_and_input(tariff.mileage_params_input, base.random_value_float_str(10, 50))\n        tariff.click_button(tariff.address_cost_input)\n        tariff.backspace_len_and_input(tariff.mileage_params_input, base.random_value_float_str(1000, 3000))\n        tariff.click_button(tariff.free_downtime_input)\n        tariff.backspace_len_and_input(tariff.mileage_params_input, base.random_value_float_str(10, 60))\n        tariff.click_button(tariff.add_min_price_button)\n        tariff.backspace_len_and_input(tariff.mileage_params_input, base.random_value_float_str(2500, 10000))\n        # Подтверждение изменений тарифа\n        tariff.click_button(tariff.add_confirm_button)\n        tariff.backspace_len_and_input(tariff.mileage_params_input, base.random_value_float_str(10, 30))\n        tariff.backspace_len_and_input(tariff.mileage_params_input_2, base.random_value_float_str(1, 5))\n        tariff.backspace_len_and_input(tariff.mileage_params_input_3, base.random_value_float_str(10, 60))\n        # Сохранение изменений тарифа\n        tariff.click_button(tariff.add_fm_tariff_button)\n        tariff.click_button(tariff.confirm_button)\n        tariff.click_button(tariff.confirm_button)\n>       tariff.click_button(tariff.confirm_button, do_assert=True)\n\ntests\\test_tariff_edit_lkp.py:194: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbase\\base_class.py:321: in click_button\n    button_dict['element'].click()\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:394: in _execute\n    return self._parent.execute(command, params)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002357FDAE850>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...07FF6B68C607F]\\\\n\\\\tBaseThreadInitThunk [0x00007FFE26487374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFE27CBCC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=129.0.6668.101); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6B695B125+29573]\nE       \t(No symbol) [0x00007FF6B68CFF50]\nE       \t(No symbol) [0x00007FF6B678B6EA]\nE       \t(No symbol) [0x00007FF6B67922BE]\nE       \t(No symbol) [0x00007FF6B6794637]\nE       \t(No symbol) [0x00007FF6B67946F0]\nE       \t(No symbol) [0x00007FF6B67E73D9]\nE       \t(No symbol) [0x00007FF6B67E4F3C]\nE       \t(No symbol) [0x00007FF6B67E2408]\nE       \t(No symbol) [0x00007FF6B67E161A]\nE       \t(No symbol) [0x00007FF6B67D36BE]\nE       \t(No symbol) [0x00007FF6B68072FA]\nE       \t(No symbol) [0x00007FF6B67D2FF6]\nE       \t(No symbol) [0x00007FF6B6807510]\nE       \t(No symbol) [0x00007FF6B68286BC]\nE       \t(No symbol) [0x00007FF6B68070A3]\nE       \t(No symbol) [0x00007FF6B67D12DF]\nE       \t(No symbol) [0x00007FF6B67D2441]\nE       \tGetHandleVerifier [0x00007FF6B6C8C76D+3377613]\nE       \tGetHandleVerifier [0x00007FF6B6CD7B67+3685831]\nE       \tGetHandleVerifier [0x00007FF6B6CCCF8B+3641835]\nE       \tGetHandleVerifier [0x00007FF6B6A1B2A6+816390]\nE       \t(No symbol) [0x00007FF6B68DB25F]\nE       \t(No symbol) [0x00007FF6B68D7084]\nE       \t(No symbol) [0x00007FF6B68D7220]\nE       \t(No symbol) [0x00007FF6B68C607F]\nE       \tBaseThreadInitThunk [0x00007FFE26487374+20]\nE       \tRtlUserThreadStart [0x00007FFE27CBCC91+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: StaleElementReferenceException"}, "description": "ЛКП. Тест копирования FTL тарифа: фильтр - ПБ, тип - Пробег, маршрут - Старый, название - ПБ-timestamp, ТС - Старый, кузов - Старый, минималка/доп.адрес/ожидание - Рандом, оригинал - Удаляем", "steps": [{"name": "Move to directories_hover", "status": "passed", "start": 1729341185710, "stop": 1729341186525}, {"name": "Click on tariffs_list_button", "status": "passed", "steps": [{"name": "Assert \"Тарифы\" == \"Тарифы\"", "status": "passed", "start": 1729341187531, "stop": 1729341187531}], "start": 1729341186627, "stop": 1729341187531}, {"name": "Input in tariff_name_filter: ПБ", "status": "passed", "start": 1729341187531, "stop": 1729341188878}, {"name": "Click on first_tariff_link", "status": "passed", "start": 1729341188878, "stop": 1729341189498}, {"name": "Click on action_menu_button", "status": "passed", "start": 1729341189498, "stop": 1729341189559}, {"name": "Click on copy_tariff_button", "status": "passed", "start": 1729341189559, "stop": 1729341190165}, {"name": "Backspace and input in tariff_name_input: ПБ-20241019123310", "status": "passed", "start": 1729341190165, "stop": 1729341190307}, {"name": "Click on extra_mileage_input", "status": "passed", "start": 1729341190307, "stop": 1729341190374}, {"name": "Backspace and input in mileage_params_input: 35", "status": "passed", "start": 1729341190374, "stop": 1729341190440}, {"name": "Click on address_cost_input", "status": "passed", "start": 1729341190440, "stop": 1729341190515}, {"name": "Backspace and input in mileage_params_input: 1201", "status": "passed", "start": 1729341190515, "stop": 1729341190590}, {"name": "Click on free_downtime_input", "status": "passed", "start": 1729341190590, "stop": 1729341190649}, {"name": "Backspace and input in mileage_params_input: 34", "status": "passed", "start": 1729341190649, "stop": 1729341190715}, {"name": "Click on add_min_price_button", "status": "passed", "start": 1729341190715, "stop": 1729341190788}, {"name": "Backspace and input in mileage_params_input: 7051", "status": "passed", "start": 1729341190789, "stop": 1729341190891}, {"name": "Click on add_min_price_button", "status": "passed", "start": 1729341190891, "stop": 1729341190951}, {"name": "Backspace and input in mileage_params_input: 12", "status": "passed", "start": 1729341190951, "stop": 1729341191051}, {"name": "Backspace and input in mileage_params_input: 2", "status": "passed", "start": 1729341191051, "stop": 1729341191133}, {"name": "Backspace and input in mileage_params_input: 54", "status": "passed", "start": 1729341191133, "stop": 1729341191236}, {"name": "Click on add_fm_tariff_button", "status": "passed", "start": 1729341191236, "stop": 1729341191308}, {"name": "Click on create_button", "status": "passed", "start": 1729341191308, "stop": 1729341214763}, {"name": "Click on create_button", "status": "passed", "start": 1729341214763, "stop": 1729341214856}, {"name": "Click on create_button", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=129.0.6668.101); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF6B695B125+29573]\n\t(No symbol) [0x00007FF6B68CFF50]\n\t(No symbol) [0x00007FF6B678B6EA]\n\t(No symbol) [0x00007FF6B67922BE]\n\t(No symbol) [0x00007FF6B6794637]\n\t(No symbol) [0x00007FF6B67946F0]\n\t(No symbol) [0x00007FF6B67E73D9]\n\t(No symbol) [0x00007FF6B67E4F3C]\n\t(No symbol) [0x00007FF6B67E2408]\n\t(No symbol) [0x00007FF6B67E161A]\n\t(No symbol) [0x00007FF6B67D36BE]\n\t(No symbol) [0x00007FF6B68072FA]\n\t(No symbol) [0x00007FF6B67D2FF6]\n\t(No symbol) [0x00007FF6B6807510]\n\t(No symbol) [0x00007FF6B68286BC]\n\t(No symbol) [0x00007FF6B68070A3]\n\t(No symbol) [0x00007FF6B67D12DF]\n\t(No symbol) [0x00007FF6B67D2441]\n\tGetHandleVerifier [0x00007FF6B6C8C76D+3377613]\n\tGetHandleVerifier [0x00007FF6B6CD7B67+3685831]\n\tGetHandleVerifier [0x00007FF6B6CCCF8B+3641835]\n\tGetHandleVerifier [0x00007FF6B6A1B2A6+816390]\n\t(No symbol) [0x00007FF6B68DB25F]\n\t(No symbol) [0x00007FF6B68D7084]\n\t(No symbol) [0x00007FF6B68D7220]\n\t(No symbol) [0x00007FF6B68C607F]\n\tBaseThreadInitThunk [0x00007FFE26487374+20]\n\tRtlUserThreadStart [0x00007FFE27CBCC91+33]\n\n", "trace": "  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\base\\base_class.py\", line 321, in click_button\n    button_dict['element'].click()\n  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1729341214856, "stop": 1729341215073}, {"name": "Screen taken: tests_test_tariff_edit_lkp.py_test_ftl_ml_tariff_copy_lkp[lkp]_2024.10.19.12.33.35.png", "status": "passed", "attachments": [{"name": "Screenshot", "source": "edee72bb-af00-4d80-a871-093b7accdaeb-attachment.png", "type": "image/png"}], "start": 1729341215239, "stop": 1729341215239}], "parameters": [{"name": "base_fixture", "value": "'lkp'"}], "start": 1729341185710, "stop": 1729341215073, "uuid": "9439ed1c-2fc4-4eed-abb9-2cca0729a7ae", "historyId": "20db76e5e1bc420f9ccce6cb98884189", "testCaseId": "02d57a8fe2fc805fe58ef91b24d524b0", "fullName": "tests.test_tariff_edit_lkp#test_ftl_ml_tariff_copy_lkp", "labels": [{"name": "story", "value": "Extended test"}, {"name": "feature", "value": "Копирование тарифов"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_tariff_edit_lkp"}, {"name": "host", "value": "DESKTOP-J5EC1KL"}, {"name": "thread", "value": "14196-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_tariff_edit_lkp"}]}
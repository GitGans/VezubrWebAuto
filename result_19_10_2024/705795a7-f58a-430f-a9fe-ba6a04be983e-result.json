{"name": "test_user_responsible_fo_producer_lke[lke]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"link-back\" href=\"/profile/users/987...\">1</a> is not clickable at point (283, 440). Other element would receive the click: <div class=\"ant-spin ant-spin-spinning ant-table-with-pagination ant-table-spin-holder\">...</div>\n  (Session info: chrome=129.0.6668.101)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6B695B125+29573]\n\t(No symbol) [0x00007FF6B68CFF50]\n\t(No symbol) [0x00007FF6B678B6EA]\n\t(No symbol) [0x00007FF6B67E74EE]\n\t(No symbol) [0x00007FF6B67E4F3C]\n\t(No symbol) [0x00007FF6B67E2408]\n\t(No symbol) [0x00007FF6B67E161A]\n\t(No symbol) [0x00007FF6B67D36BE]\n\t(No symbol) [0x00007FF6B68072FA]\n\t(No symbol) [0x00007FF6B67D2FF6]\n\t(No symbol) [0x00007FF6B6807510]\n\t(No symbol) [0x00007FF6B68286BC]\n\t(No symbol) [0x00007FF6B68070A3]\n\t(No symbol) [0x00007FF6B67D12DF]\n\t(No symbol) [0x00007FF6B67D2441]\n\tGetHandleVerifier [0x00007FF6B6C8C76D+3377613]\n\tGetHandleVerifier [0x00007FF6B6CD7B67+3685831]\n\tGetHandleVerifier [0x00007FF6B6CCCF8B+3641835]\n\tGetHandleVerifier [0x00007FF6B6A1B2A6+816390]\n\t(No symbol) [0x00007FF6B68DB25F]\n\t(No symbol) [0x00007FF6B68D7084]\n\t(No symbol) [0x00007FF6B68D7220]\n\t(No symbol) [0x00007FF6B68C607F]\n\tBaseThreadInitThunk [0x00007FFE26487374+20]\n\tRtlUserThreadStart [0x00007FFE27CBCC91+33]", "trace": "base_fixture = (<base.base_class.Base object at 0x0000023500CB6610>, <pages.sidebar.SideBar object at 0x000002357FC98290>), domain = 'com'\n\n    @allure.story(\"Extended test\")\n    @allure.feature('Редактирование пользователей')\n    @allure.description('ЛКЭ. Тест управления ответственностью за КА: '\n                        '1) создание пользователя и фильтрация по его фамилии, '\n                        '2) назначение на ПВ - Все, делегировать - Шестому, отвязать - Всех.')\n    @pytest.mark.parametrize('base_fixture', ['lke'], indirect=True)  # Параметризация роли\n    def test_user_responsible_fo_producer_lke(base_fixture, domain):\n        # Инициализация базовых объектов через фикстуру\n        base, sidebar = base_fixture\n    \n        # Переход к профилю\n        sidebar.click_button(sidebar.profile_button, do_assert=True)\n    \n        profile = Profile(base.driver)\n        # Переход на вкладку пользователей\n        profile.click_button(profile.users_tab, do_assert=True)\n        # Клик по кнопке добавления пользователя\n        profile.click_button(profile.add_user_button)\n    \n        user = User(base.driver)\n        surname = f\"Ф-{base.get_timestamp()}\"\n        # Выбор типа пользователя\n        user.dropdown_without_input(user.user_type_select, \"Пользователь\")\n        # Выбор роли пользователя\n        user.dropdown_without_input(user.user_role_select, \"Администратор\")\n        # Выбор часового пояса пользователя\n        user.dropdown_without_input(user.user_timezone_select, \"Asia/Yekaterinburg\")\n        # Ввод фамилии пользователя\n        user.input_in_field(user.surname_input, surname)\n        # Ввод имени пользователя\n        user.input_in_field(user.name_input, f\"И-{base.get_timestamp()}\")\n        # Ввод отчества пользователя\n        user.input_in_field(user.patronymic_input, f\"О-{base.get_timestamp()}\")\n        # Ввод номера телефона пользователя\n        user.click_button(user.phone_input)\n        user.input_in_field(user.phone_input, base.random_value_float_str(1000000000, 9999999999))\n        # Ввод email пользователя\n        user.input_in_field(user.email_input, f\"E{base.get_timestamp()}@mail.ru\")\n        # Клик по кнопке создания пользователя\n        user.click_button(user.create_user_button, do_assert=True)\n        # Подтверждение создания пользователя\n        user.click_button(user.confirm_add_button)\n    \n        # Фильтрация пользователей по фамилии\n        profile.input_in_field(profile.surname_filter, surname)\n        time.sleep(1)\n        # Переход к профилю пользователя\n>       profile.click_button(profile.user_link, wait=\"form\")\n\ntests\\test_user_edit_lke.py:205: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbase\\base_class.py:321: in click_button\n    button_dict['element'].click()\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:394: in _execute\n    return self._parent.execute(command, params)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000023500CB7C50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF6B68C607F]\\\\n\\\\tBaseThreadInitThunk [0x00007FFE26487374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFE27CBCC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"link-back\" href=\"/profile/users/987...\">1</a> is not clickable at point (283, 440). Other element would receive the click: <div class=\"ant-spin ant-spin-spinning ant-table-with-pagination ant-table-spin-holder\">...</div>\nE         (Session info: chrome=129.0.6668.101)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6B695B125+29573]\nE       \t(No symbol) [0x00007FF6B68CFF50]\nE       \t(No symbol) [0x00007FF6B678B6EA]\nE       \t(No symbol) [0x00007FF6B67E74EE]\nE       \t(No symbol) [0x00007FF6B67E4F3C]\nE       \t(No symbol) [0x00007FF6B67E2408]\nE       \t(No symbol) [0x00007FF6B67E161A]\nE       \t(No symbol) [0x00007FF6B67D36BE]\nE       \t(No symbol) [0x00007FF6B68072FA]\nE       \t(No symbol) [0x00007FF6B67D2FF6]\nE       \t(No symbol) [0x00007FF6B6807510]\nE       \t(No symbol) [0x00007FF6B68286BC]\nE       \t(No symbol) [0x00007FF6B68070A3]\nE       \t(No symbol) [0x00007FF6B67D12DF]\nE       \t(No symbol) [0x00007FF6B67D2441]\nE       \tGetHandleVerifier [0x00007FF6B6C8C76D+3377613]\nE       \tGetHandleVerifier [0x00007FF6B6CD7B67+3685831]\nE       \tGetHandleVerifier [0x00007FF6B6CCCF8B+3641835]\nE       \tGetHandleVerifier [0x00007FF6B6A1B2A6+816390]\nE       \t(No symbol) [0x00007FF6B68DB25F]\nE       \t(No symbol) [0x00007FF6B68D7084]\nE       \t(No symbol) [0x00007FF6B68D7220]\nE       \t(No symbol) [0x00007FF6B68C607F]\nE       \tBaseThreadInitThunk [0x00007FFE26487374+20]\nE       \tRtlUserThreadStart [0x00007FFE27CBCC91+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "description": "ЛКЭ. Тест управления ответственностью за КА: 1) создание пользователя и фильтрация по его фамилии, 2) назначение на ПВ - Все, делегировать - Шестому, отвязать - Всех.", "steps": [{"name": "Click on profile_button", "status": "passed", "steps": [{"name": "Assert \"Общая информация о профиле\" == \"Общая информация о профиле\"", "status": "passed", "start": 1729342266314, "stop": 1729342266314}], "start": 1729342266158, "stop": 1729342266314}, {"name": "Click on users_tab", "status": "passed", "steps": [{"name": "Assert \"Пользователи\" == \"Пользователи\"", "status": "passed", "start": 1729342266460, "stop": 1729342266460}], "start": 1729342266314, "stop": 1729342266460}, {"name": "Click on add_user_button", "status": "passed", "start": 1729342266460, "stop": 1729342266548}, {"name": "Select 'Пользователь' from dropdown user_type_select", "status": "passed", "start": 1729342266548, "stop": 1729342267205}, {"name": "Select 'Администратор' from dropdown user_role_select", "status": "passed", "start": 1729342267205, "stop": 1729342267844}, {"name": "Select 'Asia/Yekaterinburg' from dropdown user_timezone_select", "status": "passed", "start": 1729342267844, "stop": 1729342268108}, {"name": "Input in surname_input: Ф-20241019125106", "status": "passed", "start": 1729342268108, "stop": 1729342268280}, {"name": "Input in name_input: И-20241019125108", "status": "passed", "start": 1729342268280, "stop": 1729342268421}, {"name": "Input in patronymic_input: О-20241019125108", "status": "passed", "start": 1729342268421, "stop": 1729342268560}, {"name": "Click on phone_input", "status": "passed", "start": 1729342268560, "stop": 1729342268627}, {"name": "Input in phone_input: 9105409931", "status": "passed", "start": 1729342268627, "stop": 1729342268718}, {"name": "Input in email_input: E20241019125108@mail.ru", "status": "passed", "start": 1729342268719, "stop": 1729342268890}, {"name": "Click on create_user_button", "status": "passed", "steps": [{"name": "Assert \"Пользователь создан. На указанный email отправлено письмо с информацией о Логине и Пароле для входа в Ваш ЛК Vezubr\" == \"Пользователь создан. На указанный email отправлено письмо с информацией о Логине и Пароле для входа в Ваш ЛК Vezubr\"", "status": "passed", "start": 1729342269484, "stop": 1729342269484}], "start": 1729342268890, "stop": 1729342269484}, {"name": "Click on confirm_button", "status": "passed", "start": 1729342269484, "stop": 1729342269597}, {"name": "Input in surname_filter: Ф-20241019125106", "status": "passed", "start": 1729342269597, "stop": 1729342269733}, {"name": "Click on user_link", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"link-back\" href=\"/profile/users/987...\">1</a> is not clickable at point (283, 440). Other element would receive the click: <div class=\"ant-spin ant-spin-spinning ant-table-with-pagination ant-table-spin-holder\">...</div>\n  (Session info: chrome=129.0.6668.101)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6B695B125+29573]\n\t(No symbol) [0x00007FF6B68CFF50]\n\t(No symbol) [0x00007FF6B678B6EA]\n\t(No symbol) [0x00007FF6B67E74EE]\n\t(No symbol) [0x00007FF6B67E4F3C]\n\t(No symbol) [0x00007FF6B67E2408]\n\t(No symbol) [0x00007FF6B67E161A]\n\t(No symbol) [0x00007FF6B67D36BE]\n\t(No symbol) [0x00007FF6B68072FA]\n\t(No symbol) [0x00007FF6B67D2FF6]\n\t(No symbol) [0x00007FF6B6807510]\n\t(No symbol) [0x00007FF6B68286BC]\n\t(No symbol) [0x00007FF6B68070A3]\n\t(No symbol) [0x00007FF6B67D12DF]\n\t(No symbol) [0x00007FF6B67D2441]\n\tGetHandleVerifier [0x00007FF6B6C8C76D+3377613]\n\tGetHandleVerifier [0x00007FF6B6CD7B67+3685831]\n\tGetHandleVerifier [0x00007FF6B6CCCF8B+3641835]\n\tGetHandleVerifier [0x00007FF6B6A1B2A6+816390]\n\t(No symbol) [0x00007FF6B68DB25F]\n\t(No symbol) [0x00007FF6B68D7084]\n\t(No symbol) [0x00007FF6B68D7220]\n\t(No symbol) [0x00007FF6B68C607F]\n\tBaseThreadInitThunk [0x00007FFE26487374+20]\n\tRtlUserThreadStart [0x00007FFE27CBCC91+33]\n\n", "trace": "  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\base\\base_class.py\", line 321, in click_button\n    button_dict['element'].click()\n  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1729342270737, "stop": 1729342271805}, {"name": "Screen taken: tests_test_user_edit_lke.py_test_user_responsible_fo_producer_lke[lke]_2024.10.19.12.51.11.png", "status": "passed", "attachments": [{"name": "Screenshot", "source": "9cfbf663-c38e-4d89-9a48-5550de0a377b-attachment.png", "type": "image/png"}], "start": 1729342271973, "stop": 1729342271988}], "parameters": [{"name": "base_fixture", "value": "'lke'"}], "start": 1729342266158, "stop": 1729342271805, "uuid": "e703d9b6-15a3-4ff5-b07e-d3142d026225", "historyId": "a69403f9915948ebe525bd2c7fb1fa91", "testCaseId": "1c7e1963a5db77022b12ad18c891486e", "fullName": "tests.test_user_edit_lke#test_user_responsible_fo_producer_lke", "labels": [{"name": "story", "value": "Extended test"}, {"name": "feature", "value": "Редактирование пользователей"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_user_edit_lke"}, {"name": "host", "value": "DESKTOP-J5EC1KL"}, {"name": "thread", "value": "14196-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_user_edit_lke"}]}
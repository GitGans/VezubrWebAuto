{"name": "test_cargo_place_multi_edit_lke[lke]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"ant-btn rounded box-shadow primary ant-btn-primary\">...</button> is not clickable at point (1524, 410). Other element would receive the click: <div tabindex=\"-1\" class=\"ant-modal-wrap \" role=\"dialog\">...</div>\n  (Session info: chrome=129.0.6668.90)\nStacktrace:\n\tGetHandleVerifier [0x00007FF63357B125+29573]\n\t(No symbol) [0x00007FF6334EFF50]\n\t(No symbol) [0x00007FF6333AB6EA]\n\t(No symbol) [0x00007FF6334074EE]\n\t(No symbol) [0x00007FF633404F3C]\n\t(No symbol) [0x00007FF633402408]\n\t(No symbol) [0x00007FF63340161A]\n\t(No symbol) [0x00007FF6333F36BE]\n\t(No symbol) [0x00007FF6334272FA]\n\t(No symbol) [0x00007FF6333F2FF6]\n\t(No symbol) [0x00007FF633427510]\n\t(No symbol) [0x00007FF6334486BC]\n\t(No symbol) [0x00007FF6334270A3]\n\t(No symbol) [0x00007FF6333F12DF]\n\t(No symbol) [0x00007FF6333F2441]\n\tGetHandleVerifier [0x00007FF6338AC76D+3377613]\n\tGetHandleVerifier [0x00007FF6338F7B67+3685831]\n\tGetHandleVerifier [0x00007FF6338ECF8B+3641835]\n\tGetHandleVerifier [0x00007FF63363B2A6+816390]\n\t(No symbol) [0x00007FF6334FB25F]\n\t(No symbol) [0x00007FF6334F7084]\n\t(No symbol) [0x00007FF6334F7220]\n\t(No symbol) [0x00007FF6334E607F]\n\tBaseThreadInitThunk [0x00007FFEF1907374+20]\n\tRtlUserThreadStart [0x00007FFEF389CC91+33]", "trace": "base_fixture = (<base.base_class.Base object at 0x000001F252B27710>, <pages.sidebar.SideBar object at 0x000001F2557A4310>), domain = 'com'\n\n    @allure.story(\"Critical path test\")\n    @allure.feature('Массовое редактирование грузомест')\n    @allure.description('ЛКЭ. Тест массового редактирования ГМ ГВ: создаем - родительское ГМ ГВ, выбираем - 2-е и 3-е ГМ в '\n                        'списке, статус - Принято, адреса к статусу/отправления/доставки - Первый в списке, родительске ГМ '\n                        '- Созданное ГМ с баркодом - cp_stamp')\n    @pytest.mark.parametrize('base_fixture', ['lke'], indirect=True)  # Параметризация роли\n    def test_cargo_place_multi_edit_lke(base_fixture, domain):\n        # Инициализация базовых объектов через фикстуру\n        base, sidebar = base_fixture\n    \n        # Переход к списку грузомест\n        sidebar.move_and_click(move_to=sidebar.assignments_hover, click_to=sidebar.cargo_place_list_button,\n                               do_assert=True, wait=\"lst\")\n        time.sleep(1.5)\n        cp_list = CargoPlaceList(base.driver)\n        # Клик по кнопке добавления грузоместа\n        cp_list.click_button(cp_list.add_cargo_place_button, wait=\"form\")\n    \n        add_cp = CargoPlaceAdd(base.driver)\n        # Выбор владельца грузоместа \"Auto LKZ\"\n        add_cp.dropdown_click_input_click(add_cp.cargo_place_owner_select, \"Auto LKZ\")\n        # Добавление полного базового грузоместа\n        cp_stamp = add_cp.add_full_cargo_place_lke()\n    \n        cp_list = CargoPlaceList(base.driver)\n        # Сброс фильтров\n        cp_list.click_button(cp_list.reset_button, wait=\"lst\")\n        # Клик по кнопке экшен меню\n        cp_list.click_button(cp_list.action_menu_button)\n        # Клик по кнопке мультивыбор ГМ\n        cp_list.click_button(cp_list.multi_select_button)\n        # Выбор второго чек-бокса\n        cp_list.click_button(cp_list.cp_list_checkbox, index=4)\n        # Выбор третьего чек-бокса\n        cp_list.click_button(cp_list.cp_list_checkbox, index=3)\n        # Клик по кнопке редактировать\n        cp_list.click_button(cp_list.multi_edit_button)\n        # Изменение статуса грузомест\n        cp_list.dropdown_click_input_click(cp_list.field_change_select, \"Статус\")\n        cp_list.dropdown_click_input_click(cp_list.new_value_select, \"Принято\")\n        cp_list.click_button(cp_list.ok_button, wait=\"lst\")\n        # Клик по кнопке редактировать\n>       cp_list.click_button(cp_list.multi_edit_button)\n\ntests\\test_cargo_place_operations.py:163: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbase\\base_class.py:415: in click_button\n    button_dict['element'].click()\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:394: in _execute\n    return self._parent.execute(command, params)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001F2557A5290>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF6334E607F]\\\\n\\\\tBaseThreadInitThunk [0x00007FFEF1907374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFEF389CC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"ant-btn rounded box-shadow primary ant-btn-primary\">...</button> is not clickable at point (1524, 410). Other element would receive the click: <div tabindex=\"-1\" class=\"ant-modal-wrap \" role=\"dialog\">...</div>\nE         (Session info: chrome=129.0.6668.90)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF63357B125+29573]\nE       \t(No symbol) [0x00007FF6334EFF50]\nE       \t(No symbol) [0x00007FF6333AB6EA]\nE       \t(No symbol) [0x00007FF6334074EE]\nE       \t(No symbol) [0x00007FF633404F3C]\nE       \t(No symbol) [0x00007FF633402408]\nE       \t(No symbol) [0x00007FF63340161A]\nE       \t(No symbol) [0x00007FF6333F36BE]\nE       \t(No symbol) [0x00007FF6334272FA]\nE       \t(No symbol) [0x00007FF6333F2FF6]\nE       \t(No symbol) [0x00007FF633427510]\nE       \t(No symbol) [0x00007FF6334486BC]\nE       \t(No symbol) [0x00007FF6334270A3]\nE       \t(No symbol) [0x00007FF6333F12DF]\nE       \t(No symbol) [0x00007FF6333F2441]\nE       \tGetHandleVerifier [0x00007FF6338AC76D+3377613]\nE       \tGetHandleVerifier [0x00007FF6338F7B67+3685831]\nE       \tGetHandleVerifier [0x00007FF6338ECF8B+3641835]\nE       \tGetHandleVerifier [0x00007FF63363B2A6+816390]\nE       \t(No symbol) [0x00007FF6334FB25F]\nE       \t(No symbol) [0x00007FF6334F7084]\nE       \t(No symbol) [0x00007FF6334F7220]\nE       \t(No symbol) [0x00007FF6334E607F]\nE       \tBaseThreadInitThunk [0x00007FFEF1907374+20]\nE       \tRtlUserThreadStart [0x00007FFEF389CC91+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "description": "ЛКЭ. Тест массового редактирования ГМ ГВ: создаем - родительское ГМ ГВ, выбираем - 2-е и 3-е ГМ в списке, статус - Принято, адреса к статусу/отправления/доставки - Первый в списке, родительске ГМ - Созданное ГМ с баркодом - cp_stamp", "steps": [{"name": "Move to assignments_hover", "status": "passed", "start": 1728270142126, "stop": 1728270142959}, {"name": "Click on cargo_place_list_button", "status": "passed", "steps": [{"name": "Assert \"Задания\" == \"Задания\"", "status": "passed", "start": 1728270144941, "stop": 1728270144941}], "start": 1728270143061, "stop": 1728270144941}, {"name": "Click on add_cargo_place_button", "status": "passed", "start": 1728270146453, "stop": 1728270147567}, {"name": "Select 'Auto LKZ' from dropdown cargo_place_owner_select", "status": "passed", "start": 1728270147567, "stop": 1728270149245}, {"name": "Select 'Короб' from dropdown cargo_place_type_select", "status": "passed", "start": 1728270149245, "stop": 1728270149887}, {"name": "Backspace and input in cp_quantity_input: 8", "status": "passed", "start": 1728270149887, "stop": 1728270149975}, {"name": "Backspace and input in cp_weight_input: 5010", "status": "passed", "start": 1728270149975, "stop": 1728270150067}, {"name": "Backspace and input in cp_value_input: 22.5", "status": "passed", "start": 1728270150067, "stop": 1728270150166}, {"name": "Backspace and input in cp_cost_input: 578573", "status": "passed", "start": 1728270150166, "stop": 1728270150259}, {"name": "Select 'Новое' from dropdown lke_cp_status_select", "status": "passed", "start": 1728270150259, "stop": 1728270150887}, {"name": "Input in lke_cp_title_input: ГМ-20241007030230", "status": "passed", "start": 1728270150888, "stop": 1728270150995}, {"name": "Input in lke_invoice_number_input: ГМ-20241007030230", "status": "passed", "start": 1728270150995, "stop": 1728270151078}, {"name": "Input in lke_bar_code_input: ГМ-20241007030230", "status": "passed", "start": 1728270151078, "stop": 1728270151163}, {"name": "Input in lke_seal_number_input: ГМ-20241007030230", "status": "passed", "start": 1728270151163, "stop": 1728270151244}, {"name": "Input in temp_from_input: -2", "status": "passed", "start": 1728270151244, "stop": 1728270151309}, {"name": "Input in temp_until_input: 0", "status": "passed", "start": 1728270151309, "stop": 1728270151367}, {"name": "Input in lke_external_id_input: ГМ-20241007030230", "status": "passed", "start": 1728270151367, "stop": 1728270151450}, {"name": "Input in lke_comment_input: ГМ-20241007030230", "status": "passed", "start": 1728270151450, "stop": 1728270151526}, {"name": "Select 'Свердловская обл, г Верхняя Пышма, Успенский пр-кт, д 103а' from dropdown departure_address_select", "status": "passed", "start": 1728270151526, "stop": 1728270151914}, {"name": "Select 'Свердловская обл, г Березовский, ул Театральная, д 13' from dropdown delivery_address_select", "status": "passed", "start": 1728270151914, "stop": 1728270152254}, {"name": "Click on create_cargo_place_button", "status": "passed", "steps": [{"name": "Assert \"Грузоместо успешно создано\" == \"Грузоместо успешно создано\"", "status": "passed", "start": 1728270153459, "stop": 1728270153459}], "start": 1728270152254, "stop": 1728270153459}, {"name": "Click on create_button", "status": "passed", "start": 1728270153459, "stop": 1728270154137}, {"name": "Click on reset_button", "status": "passed", "start": 1728270154137, "stop": 1728270157008}, {"name": "Click on action_menu_button", "status": "passed", "start": 1728270157008, "stop": 1728270157150}, {"name": "Click on multi_select_button", "status": "passed", "start": 1728270157150, "stop": 1728270157530}, {"name": "Click on cp_list_checkbox index 4", "status": "passed", "start": 1728270157530, "stop": 1728270157820}, {"name": "Click on cp_list_checkbox index 3", "status": "passed", "start": 1728270157820, "stop": 1728270158110}, {"name": "Click on multi_edit_button", "status": "passed", "start": 1728270158110, "stop": 1728270158575}, {"name": "Select 'Статус' from dropdown field_change_select", "status": "passed", "start": 1728270158575, "stop": 1728270161409}, {"name": "Select 'Принято' from dropdown new_value_select", "status": "passed", "start": 1728270161409, "stop": 1728270162238}, {"name": "Click on ok_button", "status": "passed", "steps": [{"name": "Element 'loading_list' is not visible", "status": "passed", "start": 1728270177872, "stop": 1728270177872}], "start": 1728270162238, "stop": 1728270177892}, {"name": "Click on multi_edit_button", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"ant-btn rounded box-shadow primary ant-btn-primary\">...</button> is not clickable at point (1524, 410). Other element would receive the click: <div tabindex=\"-1\" class=\"ant-modal-wrap \" role=\"dialog\">...</div>\n  (Session info: chrome=129.0.6668.90)\nStacktrace:\n\tGetHandleVerifier [0x00007FF63357B125+29573]\n\t(No symbol) [0x00007FF6334EFF50]\n\t(No symbol) [0x00007FF6333AB6EA]\n\t(No symbol) [0x00007FF6334074EE]\n\t(No symbol) [0x00007FF633404F3C]\n\t(No symbol) [0x00007FF633402408]\n\t(No symbol) [0x00007FF63340161A]\n\t(No symbol) [0x00007FF6333F36BE]\n\t(No symbol) [0x00007FF6334272FA]\n\t(No symbol) [0x00007FF6333F2FF6]\n\t(No symbol) [0x00007FF633427510]\n\t(No symbol) [0x00007FF6334486BC]\n\t(No symbol) [0x00007FF6334270A3]\n\t(No symbol) [0x00007FF6333F12DF]\n\t(No symbol) [0x00007FF6333F2441]\n\tGetHandleVerifier [0x00007FF6338AC76D+3377613]\n\tGetHandleVerifier [0x00007FF6338F7B67+3685831]\n\tGetHandleVerifier [0x00007FF6338ECF8B+3641835]\n\tGetHandleVerifier [0x00007FF63363B2A6+816390]\n\t(No symbol) [0x00007FF6334FB25F]\n\t(No symbol) [0x00007FF6334F7084]\n\t(No symbol) [0x00007FF6334F7220]\n\t(No symbol) [0x00007FF6334E607F]\n\tBaseThreadInitThunk [0x00007FFEF1907374+20]\n\tRtlUserThreadStart [0x00007FFEF389CC91+33]\n\n", "trace": "  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\base\\base_class.py\", line 415, in click_button\n    button_dict['element'].click()\n  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1728270177892, "stop": 1728270179034}, {"name": "Screen taken: tests_test_cargo_place_operations.py_test_cargo_place_multi_edit_lke[lke]_2024.10.07.03.02.59.png", "status": "passed", "start": 1728270179292, "stop": 1728270179292}], "parameters": [{"name": "base_fixture", "value": "'lke'"}], "start": 1728270142126, "stop": 1728270179034, "uuid": "3a9dc291-7c07-4680-8322-08ae55aa9dc7", "historyId": "6f3ac7e3118c65f02622df3e411e75fe", "testCaseId": "f9cee6dc3be818cf098f66b7e09cabdf", "fullName": "tests.test_cargo_place_operations#test_cargo_place_multi_edit_lke", "labels": [{"name": "story", "value": "Critical path test"}, {"name": "feature", "value": "Массовое редактирование грузомест"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_cargo_place_operations"}, {"name": "host", "value": "DESKTOP-J5EC1KL"}, {"name": "thread", "value": "2928-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_cargo_place_operations"}]}
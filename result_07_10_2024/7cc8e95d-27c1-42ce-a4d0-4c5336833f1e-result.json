{"name": "test_cargo_place_transfer_lke[lke]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=129.0.6668.90)\nStacktrace:\n\tGetHandleVerifier [0x00007FF63357B125+29573]\n\t(No symbol) [0x00007FF6334EFF50]\n\t(No symbol) [0x00007FF6333AB6EA]\n\t(No symbol) [0x00007FF63337FCD5]\n\t(No symbol) [0x00007FF63342EF67]\n\t(No symbol) [0x00007FF633447FC1]\n\t(No symbol) [0x00007FF6334270A3]\n\t(No symbol) [0x00007FF6333F12DF]\n\t(No symbol) [0x00007FF6333F2441]\n\tGetHandleVerifier [0x00007FF6338AC76D+3377613]\n\tGetHandleVerifier [0x00007FF6338F7B67+3685831]\n\tGetHandleVerifier [0x00007FF6338ECF8B+3641835]\n\tGetHandleVerifier [0x00007FF63363B2A6+816390]\n\t(No symbol) [0x00007FF6334FB25F]\n\t(No symbol) [0x00007FF6334F7084]\n\t(No symbol) [0x00007FF6334F7220]\n\t(No symbol) [0x00007FF6334E607F]\n\tBaseThreadInitThunk [0x00007FFEF1907374+20]\n\tRtlUserThreadStart [0x00007FFEF389CC91+33]", "trace": "base_fixture = (<base.base_class.Base object at 0x0000017F6D56DB90>, <pages.sidebar.SideBar object at 0x0000017F6C74FF10>), domain = 'com'\n\n    @allure.story(\"Smoke test\")\n    @allure.feature('Передача грузомест экспедитору')\n    @allure.description('ЛКЭ. Тест передачи ГМ Экспедитору: '\n                        'создаем - ГМ ГВ, передаем - Экс, создаем - LTL заявку, публикация - не публикуем')\n    @pytest.mark.parametrize('base_fixture', ['lke'], indirect=True)  # Параметризация роли\n    def test_cargo_place_transfer_lke(base_fixture, domain):\n        # Инициализация базовых объектов через фикстуру\n        base, sidebar = base_fixture\n    \n        # Переход к списку грузомест\n        sidebar.move_and_click(move_to=sidebar.assignments_hover, click_to=sidebar.cargo_place_list_button,\n                               do_assert=True, wait=\"lst\")\n        time.sleep(1.5)\n        cp_list = CargoPlaceList(base.driver)\n        # Клик по кнопке добавления грузоместа\n        cp_list.click_button(cp_list.add_cargo_place_button, wait=\"form\")\n    \n        add_cp = CargoPlaceAdd(base.driver)\n        # Выбор владельца грузоместа \"Auto LKZ\"\n        add_cp.dropdown_click_input_click(add_cp.cargo_place_owner_select, \"Auto LKZ\")\n        # Добавление полного базового грузоместа\n        cp_stamp = add_cp.add_base_cargo_place_lke()\n    \n        cp_list = CargoPlaceList(base.driver)\n        # Сброс фильтров\n        cp_list.click_button(cp_list.reset_button, wait=\"lst\")\n        # Ввод штрихкода грузоместа в поле фильтрации\n        cp_list.input_in_field(cp_list.barcode_filter, value=cp_stamp, wait=\"lst\")\n        # Клик по кнопке экшен меню\n        cp_list.click_button(cp_list.action_menu_button)\n        # Клик по кнопке мультивыбор ГМ\n        cp_list.click_button(cp_list.multi_select_button)\n        # Выбор первого чек-бокса\n        cp_list.click_button(cp_list.cp_list_checkbox, index=3)\n        # Клик по кнопке передать экспедитору\n        cp_list.click_button(cp_list.multi_transfer_button)\n    \n        ltl = DeliveryAdd(base.driver)\n        # Заполнение базовой информации для LTL заявки\n        ltl.add_base_ltl()\n        time.sleep(1)\n        # Сохранение введенных параметров\n        ltl.click_button(ltl.save_button)\n        # Публикация заявки позже\n>       ltl.click_button(ltl.publish_later_button, do_assert=True)\n\ntests\\test_cargo_place_operations.py:301: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbase\\base_class.py:414: in click_button\n    button_dict = self.get_element(updated_element_dict, wait_type)\nbase\\base_class.py:136: in get_element\n    element = WebDriverWait(self.driver, 60).until(\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:92: in until\n    value = method(self._driver)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:355: in _predicate\n    target = driver.find_element(*target)  # grab element at locator\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000017F6D55DED0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...07FF6334E607F]\\\\n\\\\tBaseThreadInitThunk [0x00007FFEF1907374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFEF389CC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=129.0.6668.90)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF63357B125+29573]\nE       \t(No symbol) [0x00007FF6334EFF50]\nE       \t(No symbol) [0x00007FF6333AB6EA]\nE       \t(No symbol) [0x00007FF63337FCD5]\nE       \t(No symbol) [0x00007FF63342EF67]\nE       \t(No symbol) [0x00007FF633447FC1]\nE       \t(No symbol) [0x00007FF6334270A3]\nE       \t(No symbol) [0x00007FF6333F12DF]\nE       \t(No symbol) [0x00007FF6333F2441]\nE       \tGetHandleVerifier [0x00007FF6338AC76D+3377613]\nE       \tGetHandleVerifier [0x00007FF6338F7B67+3685831]\nE       \tGetHandleVerifier [0x00007FF6338ECF8B+3641835]\nE       \tGetHandleVerifier [0x00007FF63363B2A6+816390]\nE       \t(No symbol) [0x00007FF6334FB25F]\nE       \t(No symbol) [0x00007FF6334F7084]\nE       \t(No symbol) [0x00007FF6334F7220]\nE       \t(No symbol) [0x00007FF6334E607F]\nE       \tBaseThreadInitThunk [0x00007FFEF1907374+20]\nE       \tRtlUserThreadStart [0x00007FFEF389CC91+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchWindowException"}, "description": "ЛКЭ. Тест передачи ГМ Экспедитору: создаем - ГМ ГВ, передаем - Экс, создаем - LTL заявку, публикация - не публикуем", "steps": [{"name": "Move to assignments_hover", "status": "passed", "start": 1728279271128, "stop": 1728279271953}, {"name": "Click on cargo_place_list_button", "status": "passed", "steps": [{"name": "Assert \"Задания\" == \"Задания\"", "status": "passed", "start": 1728279284300, "stop": 1728279284301}], "start": 1728279272053, "stop": 1728279284301}, {"name": "Click on add_cargo_place_button", "status": "passed", "start": 1728279285802, "stop": 1728279286924}, {"name": "Select 'Auto LKZ' from dropdown cargo_place_owner_select", "status": "passed", "start": 1728279286924, "stop": 1728279287590}, {"name": "Select 'Короб' from dropdown cargo_place_type_select", "status": "passed", "start": 1728279287590, "stop": 1728279288231}, {"name": "Backspace and input in cp_weight_input: 1159", "status": "passed", "start": 1728279288231, "stop": 1728279288336}, {"name": "Backspace and input in cp_value_input: 6.5", "status": "passed", "start": 1728279288336, "stop": 1728279288427}, {"name": "Backspace and input in cp_cost_input: 586788", "status": "passed", "start": 1728279288427, "stop": 1728279288525}, {"name": "Input in lke_bar_code_input: ГМ-20241007053448", "status": "passed", "start": 1728279288526, "stop": 1728279288613}, {"name": "Select 'Новое' from dropdown lke_cp_status_select", "status": "passed", "start": 1728279288614, "stop": 1728279289245}, {"name": "Select 'Свердловская обл, г Верхняя Пышма, Успенский пр-кт, д 103а' from dropdown departure_address_select", "status": "passed", "start": 1728279289245, "stop": 1728279289653}, {"name": "Select 'Свердловская обл, г Березовский, ул Театральная, д 13' from dropdown delivery_address_select", "status": "passed", "start": 1728279289653, "stop": 1728279289986}, {"name": "Click on create_cargo_place_button", "status": "passed", "steps": [{"name": "Assert \"Грузоместо успешно создано\" == \"Грузоместо успешно создано\"", "status": "passed", "start": 1728279291713, "stop": 1728279291713}], "start": 1728279289986, "stop": 1728279291713}, {"name": "Click on create_button", "status": "passed", "start": 1728279291713, "stop": 1728279292909}, {"name": "Click on reset_button", "status": "passed", "start": 1728279292909, "stop": 1728279299613}, {"name": "Input in barcode_filter: ГМ-20241007053448", "status": "passed", "start": 1728279299613, "stop": 1728279301720}, {"name": "Click on action_menu_button", "status": "passed", "start": 1728279301720, "stop": 1728279301782}, {"name": "Click on multi_select_button", "status": "passed", "start": 1728279301782, "stop": 1728279301870}, {"name": "Click on cp_list_checkbox index 3", "status": "passed", "start": 1728279301870, "stop": 1728279301954}, {"name": "Click on multi_transfer_button", "status": "passed", "start": 1728279301954, "stop": 1728279302057}, {"name": "Click on start_at_from_button", "status": "passed", "start": 1728279302057, "stop": 1728279305690}, {"name": "Click on today_button", "status": "passed", "start": 1728279305690, "stop": 1728279306272}, {"name": "Click on start_at_from_button", "status": "passed", "start": 1728279306272, "stop": 1728279306329}, {"name": "Backspace 5 times and input in start_at_from_input: 1105", "status": "passed", "start": 1728279306329, "stop": 1728279306922}, {"name": "Click on calendar_ok_button", "status": "passed", "start": 1728279306922, "stop": 1728279306979}, {"name": "Click on save_button", "status": "passed", "start": 1728279308980, "stop": 1728279309042}, {"name": "Click on publish_later_button", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=129.0.6668.90)\nStacktrace:\n\tGetHandleVerifier [0x00007FF63357B125+29573]\n\t(No symbol) [0x00007FF6334EFF50]\n\t(No symbol) [0x00007FF6333AB6EA]\n\t(No symbol) [0x00007FF63337FCD5]\n\t(No symbol) [0x00007FF63342EF67]\n\t(No symbol) [0x00007FF633447FC1]\n\t(No symbol) [0x00007FF6334270A3]\n\t(No symbol) [0x00007FF6333F12DF]\n\t(No symbol) [0x00007FF6333F2441]\n\tGetHandleVerifier [0x00007FF6338AC76D+3377613]\n\tGetHandleVerifier [0x00007FF6338F7B67+3685831]\n\tGetHandleVerifier [0x00007FF6338ECF8B+3641835]\n\tGetHandleVerifier [0x00007FF63363B2A6+816390]\n\t(No symbol) [0x00007FF6334FB25F]\n\t(No symbol) [0x00007FF6334F7084]\n\t(No symbol) [0x00007FF6334F7220]\n\t(No symbol) [0x00007FF6334E607F]\n\tBaseThreadInitThunk [0x00007FFEF1907374+20]\n\tRtlUserThreadStart [0x00007FFEF389CC91+33]\n\n", "trace": "  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\base\\base_class.py\", line 414, in click_button\n    button_dict = self.get_element(updated_element_dict, wait_type)\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\base\\base_class.py\", line 136, in get_element\n    element = WebDriverWait(self.driver, 60).until(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 92, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 355, in _predicate\n    target = driver.find_element(*target)  # grab element at locator\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 741, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\Gans\\PycharmProjects\\VezubrWebAuto\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1728279309042, "stop": 1728279341060}], "parameters": [{"name": "base_fixture", "value": "'lke'"}], "start": 1728279271128, "stop": 1728279341064, "uuid": "8e31a7a0-9dab-4cb3-8bf1-33be3e7d3879", "testCaseId": "81674f393ddbfb82698e96a00a2f99f8", "fullName": "tests.test_cargo_place_operations#test_cargo_place_transfer_lke"}